bind		0 80
# When kore.io is launched in foreground mode the pid file is not written.
# pidfile path is created at runtime
#pidfile     webui.pid

# Facultative
#http_keepalive_time             0
validator   v_macaddr   regex   ^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$

# TODO check if its correct ....
#validator   v_ip4_addr  regex   ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
validator   v_ip4_addr   regex   ^([0-9]{1,3}[.]){3}([0-9]{1,3})$

#validator   v_ip6_addr  regex   ^(?:[A-F0-9a-f]{1,4}:){7}[A-F0-9a-f]{1,4}$
validator   v_ip6_addr   regex   ^([0-9A-Fa-f]{1,4}[:]){7}([0-9A-Fa-f]{1,4})$
validator   v_filename  regex   ^.*$
validator   v_command   regex   ^(THING_ON)|(THING_OFF)|(ALL_THINGS_OFF)|(ALL_THINGS_ON)|(PARTY_MODE_ON)|(PARTY_MODE_OFF)|(monitor)|(admin)$
validator   v_ip_valid  function v_ip_validate
validator   v_ip_authorized_browse function v_ip_authorized_browse
validator   v_column_alterable regex ^(name)$
validator   v_priv_column_alterable regex ^(admin)$
validator   v_yes_no regex ^(yes|no)$

validator   v_alphanumeric regex ^.*$
validator   v_thing_name regex ^[a-zA-Z0-9_-]*$
validator   v_id regex ^[0-9]*$
validator   v_event_command regex  ^(enable_browse|disable_browse)$
validator   v_local_url regex ^/.*$
validator   v_variable regex ^(state all things|party mode)$

authentication auth_admin {
	authentication_type request
	authentication_validator	v_ip_valid	
# from kore.io source code: Authentication types of "request" send their own HTTP responses. 
}


#--- Is the IP authorized to browse?
authentication auth_browse {
	authentication_type request
	authentication_validator	v_ip_authorized_browse	
# from kore.io source code: Authentication types of "request" send their own HTTP responses. 
}


domain * {
	accesslog webui_access.log
	
	# This is the main page
	# The auth_browse redirect the URL to :
	#  -> /captive_client  : if the MacAddress is not authorized to browse
	#  -> /                : page if the MacAddres is authorized to browse but is not admin.
	#  -> /TO BE DEFINED   : if the MacAddres is disabled to browse.
	#  -> /captive_admin   : if the MacAddress is admin authorized
	#
        static /		serve_asset auth_browse
	static /welcome		serve_asset
	static /error_list	print_error_list
	static /disabled_to_browse disabled_to_browse
	# This page serve asset (CSS,Js, image, etc etc) 
	static /serve_asset		serve_asset
    	params get /serve_asset {
	    validate o v_filename
	}

	# Captive portal
	## Client side
	static /captive_client captive_portal_client
	params get /captive_client {	       
	    validate macaddr v_macaddr
	}

	# Captive portal
	## Admin side
	# The captive portal admin page is authenticate by mac-addr .
	static /captive_admin captive_portal_admin auth_admin
	

	# command pipeline
	static     /cmd	   queue_command auth_admin
	params get /cmd {
	 	validate op  v_command
	 	validate macaddr v_macaddr
	 	validate ip4 v_ip4_addr
	 	validate ip6 v_ip6_addr
	}

	# dynamic pages that show the 
	static     /things          thing_show
	params get /things {
		validate macaddr v_macaddr			
	}

	# endpoint used to modify privileged column
	static /modify_priv_things modify_things auth_admin
	params post /modify_priv_things {
               validate macaddr v_macaddr				
	       validate column v_priv_column_alterable
	       validate value v_yes_no
	       validate url_from v_local_url
	}

	# endpoint used to modify column
	static /modify_things modify_things
	params post /modify_things {
               validate macaddr v_macaddr				
	       validate column v_column_alterable
	       validate value v_thing_name
	       validate url_from v_local_url
	}

	# endpoint used to modify column of table event
	static /modify_event modify_event
	params get /modify_event {
               validate id v_id
	       validate action v_event_command
	       validate macaddr v_macaddr
	}

	# Configure admin page
	# Browse this you
	static /reset_admin reset_admin
	static /start_reset_procedure start_reset_procedure
	static /configure_admin reset_admin

	# administratio page (put under auth_admin) 
	#static /administration administration 


	# Test Admin authentication only for debugging
	# 
	static /test_admin test_admin auth_admin

	# special static assets
	static     /example/websocket.html  websocket_example

	# API to export SQL variable
	static /variable variable
	params get /variable {
	       validate v v_variable
	}

 	# Automatically generated mer 9 nov 2016, 13.05.29, CET
 	static /test/1 ___webui___test_unit__A001
	static /test/2 ___webui___test_unit__A002
	static /test/3 ___webui___test_unit__A003

       dynamic ^/css/.*$ proxy
       dynamic ^/img/.*$ proxy
       dynamic ^/js/.*$ proxy
       dynamic ^/fonts/.*$ proxy
       dynamic ^/.[^.]*.png$ proxy
       dynamic ^/HACKING.md$ proxy

       #--- all remaining URL should be authorized to browse
       dynamic ^.*$ proxy auth_browse

}


